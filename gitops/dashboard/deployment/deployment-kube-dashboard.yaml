kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kube-dashboard
  name: kube-dashboard
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dashboard
  template:
    metadata:
      labels:
        k8s-app: kube-dashboard
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: kube-dashboard
          image: kubernetesui/dashboard:v2.7.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --namespace=kube-system
            - --enable-skip-login
            - --tls-cert-file=tls.crt
            - --tls-key-file=tls.key
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            - mountPath: /certs
              name: ingress-tls
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ingress-tls
          secret:
            secretName: dashboard-ingress
      serviceAccountName: kube-dashboard
      nodeSelector:
        "node/type": manager
      tolerations:
      - key: "type"
        operator: Equal
        value: manager
        effect: NoSchedule
